#!/usr/bin/env ruby

# Trap interrupts to quit cleanly. See
# https://twitter.com/mitchellh/status/283014103189053442
Signal.trap('INT') { abort }

require 'oauth'
require 't'
require 'twitter'

# Output message to $stderr, prefixed with the program name
def pute(*args)
  first = args.shift.dup
  first.insert(0, "#{$PROGRAM_NAME}: ")
  args.unshift(first)
  abort(args.join("\n"))
end

begin
  T::CLI.start(ARGV)
rescue Interrupt
  pute 'Quitting...'
rescue OAuth::Unauthorized
  pute 'Authorization failed'
rescue Twitter::Error::TooManyRequests => error
  pute error.message,
       "The rate limit for this request will reset in #{error.rate_limit.reset_in} #{error.rate_limit.reset_in == 1 ? 'second' : 'seconds'}.",
       'While you wait, consider making a polite request for Twitter to increase the API rate limit at https://dev.twitter.com/discussions/10644'
rescue Twitter::Error::BadRequest => error
  pute error.message,
       'Run `t authorize` to authorize.'
rescue Twitter::Error::Forbidden, Twitter::Error::Unauthorized => error
  if error.message == 'Error processing your OAuth request: Read-only application cannot POST' ||
    error.message == 'This application is not allowed to access or delete your direct messages'
    $stderr.puts(%q(Make sure to set your Twitter application's Access Level to "Read, Write and Access direct messages".))
    $stderr.puts("Consider checking https://dev.twitter.com/apps")
  else
    pute error.message
  end
rescue Twitter::Error => error
  pute error.message
end
